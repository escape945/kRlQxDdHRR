const express=require("express"),fs=require("fs"),os=require("os"),path=require("path"),cp=require("child_process"),http=require("http"),https=require("https"),stream=require("stream"),httpProxyMiddleware=require("http-proxy-middleware"),dotenv=require("dotenv"),CoreConfigHandler=require("./utils/coreConfigHandler.js");let err404=`<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Page not found</title><style>*{margin:0;padding:0;font-family:sans-serif}body,html{width:100%;height:100%;overflow:auto;color:#000;background-color:#fff;box-sizing:border-box}.container{margin-left:auto;margin-right:auto;--padding:18px;padding-left:var(--padding);padding-right:var(--padding);width:calc(100% - var(--padding) * 2);margin-top:80px;border-radius:8px;transition:all ease .2s,background-color 0s,color 0s}@media (min-width:980px){.container{max-width:978px}}@media (min-width:1200px){.container{max-width:1128px}}@media (max-height:500px){.container{margin-top:18px}}#backHome{display:inline-flex;align-items:center;color:#fff;background-color:#333;border-radius:16px;margin:16px 0 0;padding:16px 32px;transition:all ease .2s,background-color 0s,color 0s;user-select:none}#backHome:hover{transition:all ease .2s;background-color:#2a2a2a}#backHome:active{transition:all ease .2s;background-color:#2a2a2a;transform:scale(.95)}#backHome svg{fill:#fff}.col-2{color:#222}.headline-1{font-size:3em;font-weight:600;margin-bottom:24px}.headline-5{font-size:1em;font-weight:600;margin-bottom:0}</style></head><body><div class="container"><div><h1 class="headline-1 col-2">Page not found</h1><h5 class="headline-5 col-2">Sorry, we can't find the page you are looking for in this download server.</h5></div><div id="backHome">Back Home</div></div></body><script>document.querySelector('#backHome').addEventListener('click', () => { location.pathname = "/" });</script></html>`;dotenv.config();const app=express(),config=(()=>{let a;try{a=JSON.parse(process.env.CONFIG)}catch{try{a=JSON.parse(fs.readFileSync("./config.json").toString())}catch{console.log("[\u8F6F\u4EF6]",`Config Error`),a={}}}let b;a.warp&&(b={warp_secretKey:a.warp.key||"",warp_ipv6:a.warp.ipv6||"",warp_endpoint:a.warp.endpoint||"engage.cloudflareclient.com",add_ipv4:a.warp.add4||!1,add_ipv6:a.warp.add6||!1});let c;a.argo&&(c={argo_path:a.argo_path||("win32"==os.platform()?"./cloudflared.exe":"./cloudflared"),use_argo:a.argo.use||!1,argo_protocol:a.argo.protocol||"",argo_region:a.argo.region||"",argo_access_token:a.argo.token||""});let d;return a.tls&&(d={use_tls:a.tls.use||!1,tls_key:Buffer.from(a.tls.key,"base64").toString()||"",tls_cert:Buffer.from(a.tls.cert,"base64").toString()||""}),{core_path:a.core_path||("win32"==os.platform()?"./core.exe":"./core"),port:a.port||3e3,middle_port:a.middle_port||58515,protocol:a.protocol||"dmxlc3M=",uuid:a.uuid||guid(),path:a.path||"/api",...d,...b,...c}})();function guid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=0|16*Math.random(),c="x"==a?b:8|3&b;return c.toString(16)})}app.get("/generate_204",(a,b)=>{b.status(204).send("")}),app.get("/debug"+config.path,(a,b)=>{b.setHeader("Content-Type","text/plain").send(cp.execSync(`ps aux|sort -rn -k +4|head -50`).toString())});const wsProxy=httpProxyMiddleware.createProxyMiddleware({target:`http://127.0.0.1:${config.middle_port}/`,changeOrigin:!0,ws:!0,logLevel:"silent"});app.use(config.path,wsProxy),app.use((a,b)=>{b.status(404).send(err404)});function download_core(){return new Promise(async(a,b)=>{let c="https://tt.vg/DrLSV";if("linux"==os.platform()){let a="";switch(os.arch()){case"x64":a+="";break;default:return void b("Core: Unsupport Arch");}c+=a}else return void b("Core: Unsupport Platform");try{const b=await(await fetch(c,{redirect:"follow",cache:"no-store"})).arrayBuffer();fs.writeFileSync(path.resolve(process.cwd(),config.core_path),Buffer.from(b)),a(!0)}catch(b){console.log(b),a(!1)}})}async function start_core(){let a={};if(config.warp_secretKey&&config.warp_ipv6&&(config.add_ipv4||config.add_ipv6)){let b="IPIfNonMatch",c=[{type:"field",ip:["0.0.0.0/0"],outboundTag:config.add_ipv4?"wireguard":"direct"},{type:"field",ip:["::/0"],outboundTag:config.add_ipv6?"wireguard":"direct"}];config.add_ipv4&&config.add_ipv6&&(b="AsIs",c=[{type:"field",port:"0-65535",outboundTag:"wireguard"}]),a={OutboundCustom:[{protocol:"freedom",settings:{},tag:"direct"},{protocol:"blackhole",settings:{},tag:"blocked"},{protocol:"wireguard",settings:{secretKey:config.warp_secretKey,address:["172.16.0.2/32",config.warp_ipv6+"/128"],peers:[{publicKey:"bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",allowedIPs:["0.0.0.0/0","::/0"],endpoint:config.warp_endpoint+":2408"}],reserved:[0,0,0],mtu:1420},tag:"wireguard"}],RoutingCustom:{domainStrategy:b,rules:[...c,{outboundTag:"blocked",protocol:["bittorrent"],type:"field"}]}}}let b=new CoreConfigHandler.default().generateServerConfig({InboundPort:config.middle_port,InboundAddress:"127.0.0.1",sniffingEnabled:!1,InboundProtocol:Buffer.from(config.protocol,"base64").toString(),InboundUUID:config.uuid,InboundStreamType:"ws",InboundEncryption:"auto",InboundAlterId:0,InboundStreamSecurity:"none",InboundPath:config.path,...a});b=JSON.stringify(b,null,""),await(()=>new Promise(async a=>{if("linux"!=os.platform())return void a();let b=["+x",path.resolve(process.cwd(),config.core_path)],c=cp.spawn("chmod",b);c.on("close",()=>{console.log("[\u521D\u59CB\u5316]","core chmod\u5B8C\u6210"),setTimeout(()=>a(),100)})}))();let c=cp.spawn(path.resolve(process.cwd(),config.core_path),["-c","stdin:"]),d=new stream.Readable;return d.push(b),d.push(null),d.pipe(c.stdin),new Promise(a=>{c.stdout.on("data",b=>{console.log(b.toString().trim()),/[0-9/]* [0-9:]* \[Warning\] core: .* started/.test(b)&&(console.log(`----------
  [Config]
  path: ${config.path}
  uuid: ${config.uuid}
  ----------`),a("[\u521D\u59CB\u5316] core\u542F\u52A8\u6210\u529F"))}),c.on("error",b=>{a("[\u521D\u59CB\u5316] core\u542F\u52A8\u9519\u8BEF\uFF1A"+b)})})}function download_argo(){return new Promise(async(a,b)=>{let c="https://github.com/cloudflare/cloudflared/releases/latest/download/";if("linux"==os.platform()){let a="cloudflared-linux-";switch(os.arch()){case"arm64":a+="arm64";break;case"x64":a+="amd64";break;default:return void b("Cloudflared: Unsupport Arch");}c+=a}else if("win32"==os.platform()){let a="cloudflared-windows-";switch(os.arch()){case"x64":a+="amd64.exe";break;default:return void b("Cloudflared: Unsupport Arch");}c+=a}else return void b("Unsupport Platform");try{const b=await(await fetch(c,{redirect:"follow",cache:"no-store"})).arrayBuffer();fs.writeFileSync(path.resolve(process.cwd(),config.argo_path),Buffer.from(b)),a(!0)}catch(b){console.log(b),a(!1)}})}async function start_argo(){await(()=>new Promise(async a=>{if("linux"!=os.platform())return void a();let b=["+x",path.resolve(process.cwd(),config.argo_path)],c=cp.spawn("chmod",b);c.on("close",()=>{console.log("[\u521D\u59CB\u5316]","argo chmod\u5B8C\u6210"),setTimeout(()=>a(),100)})}))();let a=["--url",`http://localhost:${config.port}`];config.argo_access_token&&(a=["run","--token",config.argo_access_token],console.log("[Argo Config]","domain: Custom Token")),config.argo_protocol&&a.push("--protocol",config.argo_protocol),config.argo_region&&a.push("--region",config.argo_region);let b=cp.spawn(path.resolve(process.cwd(),config.argo_path),["tunnel","--no-autoupdate",...a]);return new Promise(a=>{b.stderr.on("data",b=>{/Registered tunnel connection/.test(b)?console.log("[Argo Info]",b.toString().match(/(?<=Registered tunnel connection).*/)[0].trim()):!config.argo_access_token&&/https:\/\/.*[a-z]+cloudflare.com/.test(b)&&console.log("[Argo Config]",`domain: ${b.toString().match(/(?<=https:\/\/).*[a-z]+cloudflare.com/)[0]}`),a("[\u521D\u59CB\u5316] argo\u542F\u52A8\u6210\u529F")}),b.on("error",b=>{a("[\u521D\u59CB\u5316] argo\u542F\u52A8\u9519\u8BEF\uFF1A"+b)})})}function listen_port(){let a;if(!config.use_tls)a=http.createServer(app);else if(console.log("[\u8F6F\u4EF6]",`Enabled https`),config.tls_cert&&config.tls_key){const b={key:config.tls_key,cert:config.tls_cert};a=https.createServer(b,app)}else console.log("[\u8F6F\u4EF6]",`https missing: tls_cert,tls_key`);a.listen(config.port,()=>{console.log("[\u8F6F\u4EF6]",`Listening on port ${config.port}`)}),a.on("upgrade",wsProxy.upgrade)}(async()=>{})(),start();async function start(){if(config.use_argo){if(!fs.existsSync(path.resolve(process.cwd(),config.argo_path))){const a=await download_argo();a?console.log("[\u521D\u59CB\u5316]","argo\u4E0B\u8F7D\u6210\u529F"):console.log("[\u521D\u59CB\u5316]","argo\u4E0B\u8F7D\u5931\u8D25")}else console.log("[\u521D\u59CB\u5316]","argo\u5DF2\u5B58\u5728");console.log(await start_argo())}if(!fs.existsSync(path.resolve(process.cwd(),config.core_path))){const a=await download_core();a?console.log("[\u521D\u59CB\u5316]","core\u4E0B\u8F7D\u6210\u529F"):console.log("[\u521D\u59CB\u5316]","core\u4E0B\u8F7D\u5931\u8D25")}else console.log("[\u521D\u59CB\u5316]","core\u5DF2\u5B58\u5728");console.log(await start_core()),listen_port()}keepalive();function keepalive(){let a="";a=process.env.RENDER_EXTERNAL_HOSTNAME;a&&(https.get(`https://${a}/generate_204`,a=>{204==a.statusCode}).on("error",a=>{console.log("\u8BF7\u6C42\u9519\u8BEF: "+a)}),setTimeout(()=>{keepalive()},60*(1e3*Math.ceil(15*Math.random()))/2))}
